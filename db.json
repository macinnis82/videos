{
  "videos": [
    {
      "id": 1,
      "name": "ES2015 Arrow Functions",
      "description": "\u003cp\u003eES2015 (aka ES6) has some great ways to make your code easier to write and understand. In this episode, we cover two different ways that you can make your code clearer by removing the 'function' keyword.\u003c/p\u003e",
      "thumbnail": "https://vue-screencasts.s3.us-east-2.amazonaws.com/images/video-thumbnails/Thumbnail+-+Arrow+Function.png",
      "videoUrl": "https://vue-screencasts.s3.us-east-2.amazonaws.com/video-files/38-+es2015-+functions+minus+'function'.mp4"
    },
    {
      "id": 2,
      "name": "ES2015 Template Strings",
      "description": "\u003cp\u003eTemplate strings are an incredibly useful new feature in ES2015... and you can use them in your Ember apps today!\u003c/p\u003e\n\u003cp\u003eHere are 3 cool things that template strings enable.\u003c/p\u003e",
      "thumbnail": "https://vue-screencasts.s3.us-east-2.amazonaws.com/images/video-thumbnails/Thumbnail+-+Template+Strings.png",
      "videoUrl":  "https://vue-screencasts.s3.us-east-2.amazonaws.com/video-files/42-+ES2015+template+strings.mp4"
    },
    {
      "id": 3,
      "name": "ES2015 Modules",
      "description": "\u003cp\u003eBefore modules, javascript code loading was a mess. Now it's pretty amazing.\u003c/p\u003e\n\u003cp\u003eLearn about ES2015 modules and how they work together with ember-cli.\u003c/p\u003e",
      "thumbnail": "https://vue-screencasts.s3.us-east-2.amazonaws.com/images/video-thumbnails/Thumbnail+-+ES2015+Modules.png",
      "videoUrl": "https://vue-screencasts.s3.us-east-2.amazonaws.com/video-files/EmberScreencast+62+-+ES2015+Modules+-+Import%2C+Export.mp4"
    },
    {
      "id": 4,
      "name": "Promise Basics",
      "description": "\u003cp\u003ePromises are a tool for handling asynchronous communication, and they are commonly used in Ember applications. They’re even built in to Ember Data, route handling, and other parts of the Ember source.\u003c/p\u003e\n\u003cp\u003eThis episode introduces the then, catch, and finally blocks, how to chain them together, and how to use them with either named or anonymous functions.\u003c/p\u003e",
      "thumbnail": "https://vue-screencasts.s3.us-east-2.amazonaws.com/images/video-thumbnails/Thumbnail+-+Promise+Basics.png",
      "videoUrl": "https://vue-screencasts.s3.us-east-2.amazonaws.com/video-files/EmberScreencast+92+-+Promises+Basics.mp4"
    },
    {
      "id": 5,
      "name": "Creating New Promises",
      "description": "\u003cp\u003eSometimes you want to start a new promise chain or have greater control over the timing of events. By manually creating a promise, you can do that.\u003c/p\u003e\n\u003cp\u003eIn this video we cover creating a new promise and resolving or rejecting the promise. We use two examples- a custom AJAX login and an Ember Data findAll request.\u003c/p\u003e",
      "thumbnail": "https://vue-screencasts.s3.us-east-2.amazonaws.com/images/video-thumbnails/Thumbnail+-+Creating+New+Promises.png",
      "videoUrl": "https://vue-screencasts.s3.us-east-2.amazonaws.com/video-files/EmberScreencast+93+-+Creating+New+Promises.mp4"
    },
    {
      "id": 6,
      "name": "Multiple Concurrent Promises",
      "description": "\u003cp\u003eSometimes promises have to happen in an exact order, but often there will be several calls that can be made concurrently. RSVP’s Promise implementation allows that.\u003c/p\u003e\n\u003cp\u003eIn this video we show how to use the hash method, one of several methods available to do concurrent promises.\u003c/p\u003e",
      "thumbnail": "https://vue-screencasts.s3.us-east-2.amazonaws.com/images/video-thumbnails/Thumbnail+-+Multiple+Concurrent+Promises.png",
      "videoUrl": "https://vue-screencasts.s3.us-east-2.amazonaws.com/video-files/EmberScreencast+95+-+Multiple+Concurrent+Promises.mp4"
    },
    {
      "id": 7,
      "name": "ES2015 Destructuring",
      "description": "\u003cp\u003eDestructuring is really cool, can save you code, and you’re probably already using a small portion of its power.\u003c/p\u003e\n\u003cp\u003eLearn more about this cool new ES2015/ES6 feature, including how to destructure deeply nested objects, how to use it with Ember’s import statement, and how to use it with arrays.\u003c/p\u003e",
      "thumbnail": "https://vue-screencasts.s3.us-east-2.amazonaws.com/images/video-thumbnails/Thumbnail+-+Destructuring.png",
      "videoUrl": "https://vue-screencasts.s3.us-east-2.amazonaws.com/video-files/EmberScreencast+114+-+ES2015+Destructuring.mp4"
    },
    {
      "id": 8,
      "name": "ES2016 Decorators",
      "description": "\u003cp\u003eDecorators let you easily and repeatedly add functionality to existing functions.\u003c/p\u003e\n\u003cp\u003eIn this episode we go over how to use and create decorators, creating two useful decorators that demonstrate different parts of the API.\u003c/p\u003e",
      "thumbnail": "https://vue-screencasts.s3.us-east-2.amazonaws.com/images/video-thumbnails/Thumbnail+-+Decorators.png",
      "videoUrl": "https://vue-screencasts.s3.us-east-2.amazonaws.com/video-files/EmberScreencast+115+-+ES2016+Decorators.mp4"
    }
  ]
}
